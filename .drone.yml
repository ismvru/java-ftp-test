---
kind: pipeline
type: docker
name: default
steps:
  - name: Lint Docker
    image: repo.isaev.tech/hadolint:latest
    commands:
      - lint

  - name: Lint Yaml
    image: repo.isaev.tech/yamllint:latest
    commands:
      - lint

  - name: Lint Markdown
    image: repo.isaev.tech/mdlint:latest
    commands:
      - lint

  - name: Lint Java
    image: repo.isaev.tech/javalint:latest
    commands:
      - lint

  - name: Analyze with sonar
    image: aosapps/drone-sonar-plugin
    settings:
      sonar_host: https://sonar.isaev.tech
      sonar_token:
        from_secret: sonar_token

  - name: create settings.xml
    image: alpine:latest
    when:
      event:
        - tag
    depends_on:
      - Lint Docker
      - Lint Yaml
      - Lint Markdown
      - Lint Java
      - Analyze with sonar
    environment:
      REPO_ID: nexus
      REPO_USERNAME:
        from_secret: nexus_user
      REPO_PASSWORD:
        from_secret: nexus_pass
    commands:
      # yamllint disable-line rule:line-length
      - echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"><servers><server><id>'$REPO_ID'</id><username>'$REPO_USERNAME'</username><password>'$REPO_PASSWORD'</password></server></servers></settings>' > settings.xml

  - name: Build and deploy JAR - JDK8
    image: maven:3-openjdk-8
    when:
      event:
        - tag
    depends_on:
      - create settings.xml
    commands:
      - mvn -f pom-1.8.xml install -B
      - mvn -f pom-1.8.xml deploy -B -gs settings.xml

  - name: Build and push docker - JDK8
    image: plugins/docker
    when:
      event:
        - tag
    depends_on:
      - Build and deploy JAR - JDK8
    settings:
      username:
        from_secret: nexus_user
      password:
        from_secret: nexus_pass
      repo: repo.isaev.tech/${DRONE_REPO_NAME}
      registry: repo.isaev.tech
      dockerfile: Dockerfile-1.8
      tags:
        - 8
        - ${DRONE_TAG}-8

  - name: Build and deploy JAR - JDK11
    image: maven:3-openjdk-11
    when:
      event:
        - tag
    depends_on:
      - create settings.xml
    commands:
      - mvn -f pom-11.xml install -B
      - mvn -f pom-11.xml deploy -B -gs settings.xml

  - name: Build and push docker - JDK11
    image: plugins/docker
    when:
      event:
        - tag
    depends_on:
      - Build and deploy JAR - JDK11
    settings:
      username:
        from_secret: nexus_user
      password:
        from_secret: nexus_pass
      repo: repo.isaev.tech/${DRONE_REPO_NAME}
      registry: repo.isaev.tech
      dockerfile: Dockerfile-11
      tags:
        - 11
        - ${DRONE_TAG}-11

  - name: Build and deploy JAR - JDK17
    image: maven:3-openjdk-17
    when:
      event:
        - tag
    depends_on:
      - create settings.xml
    commands:
      - mvn -f pom-17.xml install -B
      - mvn -f pom-17.xml deploy -B -gs settings.xml

  - name: Build and push docker - JDK17
    image: plugins/docker
    when:
      event:
        - tag
    depends_on:
      - Build and deploy JAR - JDK17
    settings:
      username:
        from_secret: nexus_user
      password:
        from_secret: nexus_pass
      repo: repo.isaev.tech/${DRONE_REPO_NAME}
      registry: repo.isaev.tech
      dockerfile: Dockerfile-17
      tags:
        - 17
        - ${DRONE_TAG}-17
        - latest

  - name: send tg message - Linters
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_to
    depends_on:
      - Lint Docker
      - Lint Yaml
      - Lint Markdown
      - Lint Java
      - Analyze with sonar
    when:
      status:
        - success
        - failure

  - name: send tg message - Build and push
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_to
    depends_on:
      - Build and deploy JAR - JDK8
      - Build and deploy JAR - JDK11
      - Build and deploy JAR - JDK17
      - Build and push docker - JDK8
      - Build and push docker - JDK11
      - Build and push docker - JDK17
    when:
      status:
        - success
        - failure
